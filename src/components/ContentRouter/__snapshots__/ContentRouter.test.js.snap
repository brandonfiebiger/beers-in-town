// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContentRouter should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ContentRouter
    breweries={Array []}
    eventProps={
        Object {
            "id": 5,
          }
    }
    events={Array []}
    groupProps={
        Object {
            "id": 80,
          }
    }
    history={
        Object {
            "push": [Function],
          }
    }
    location={
        Object {
            "latitude": 5,
            "longitude": 10,
          }
    }
    populateBreweries={[Function]}
    populateEvents={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header>
          <button
                    className="event-button"
                    onClick={[Function]}
          >
                    events
          </button>
          <button
                    className="brewery-button"
                    onClick={[Function]}
          >
                    breweries
          </button>
          <button
                    className="group-button"
                    onClick={[Function]}
          >
                    groups
          </button>
</header>,
        <Route
          component={[Function]}
          exact={true}
          path="/events"
/>,
        <Route
          component={[Function]}
          exact={true}
          path="/breweries"
/>,
        <Route
          component={[Function]}
          exact={true}
          path="/groups"
/>,
        <Route
          exact={true}
          path="/events/5"
          render={[Function]}
/>,
        <Route
          exact={true}
          path="/groups/80"
          render={[Function]}
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="event-button"
              onClick={[Function]}
>
              events
</button>,
            <button
              className="brewery-button"
              onClick={[Function]}
>
              breweries
</button>,
            <button
              className="group-button"
              onClick={[Function]}
>
              groups
</button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "events",
              "className": "event-button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "events",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "breweries",
              "className": "brewery-button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "breweries",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "groups",
              "className": "group-button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "groups",
            "type": "button",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "exact": true,
          "path": "/events",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "exact": true,
          "path": "/breweries",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "exact": true,
          "path": "/groups",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "exact": true,
          "path": "/events/5",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "exact": true,
          "path": "/groups/80",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header>
            <button
                        className="event-button"
                        onClick={[Function]}
            >
                        events
            </button>
            <button
                        className="brewery-button"
                        onClick={[Function]}
            >
                        breweries
            </button>
            <button
                        className="group-button"
                        onClick={[Function]}
            >
                        groups
            </button>
</header>,
          <Route
            component={[Function]}
            exact={true}
            path="/events"
/>,
          <Route
            component={[Function]}
            exact={true}
            path="/breweries"
/>,
          <Route
            component={[Function]}
            exact={true}
            path="/groups"
/>,
          <Route
            exact={true}
            path="/events/5"
            render={[Function]}
/>,
          <Route
            exact={true}
            path="/groups/80"
            render={[Function]}
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="event-button"
                onClick={[Function]}
>
                events
</button>,
              <button
                className="brewery-button"
                onClick={[Function]}
>
                breweries
</button>,
              <button
                className="group-button"
                onClick={[Function]}
>
                groups
</button>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "events",
                "className": "event-button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "events",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "breweries",
                "className": "brewery-button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "breweries",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "groups",
                "className": "group-button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "groups",
              "type": "button",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "exact": true,
            "path": "/events",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "exact": true,
            "path": "/breweries",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "exact": true,
            "path": "/groups",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "exact": true,
            "path": "/events/5",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "exact": true,
            "path": "/groups/80",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
