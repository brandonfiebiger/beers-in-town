// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    getBreweries={[Function]}
    getEvents={[Function]}
    getGroups={[Function]}
    history={
        Object {
            "push": [Function],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          className="location-inputs"
          name="city"
          onChange={[Function]}
          placeholder="city Ex. Madison"
          value=""
/>,
        <input
          className="location-inputs"
          name="state"
          onChange={[Function]}
          placeholder="state Ex. WI"
          value=""
/>,
        <button
          className="search-button"
>
          Search
</button>,
      ],
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "location-inputs",
          "name": "city",
          "onChange": [Function],
          "placeholder": "city Ex. Madison",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "location-inputs",
          "name": "state",
          "onChange": [Function],
          "placeholder": "state Ex. WI",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Search",
          "className": "search-button",
        },
        "ref": null,
        "rendered": "Search",
        "type": "button",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="location-inputs"
            name="city"
            onChange={[Function]}
            placeholder="city Ex. Madison"
            value=""
/>,
          <input
            className="location-inputs"
            name="state"
            onChange={[Function]}
            placeholder="state Ex. WI"
            value=""
/>,
          <button
            className="search-button"
>
            Search
</button>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "location-inputs",
            "name": "city",
            "onChange": [Function],
            "placeholder": "city Ex. Madison",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "location-inputs",
            "name": "state",
            "onChange": [Function],
            "placeholder": "state Ex. WI",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Search",
            "className": "search-button",
          },
          "ref": null,
          "rendered": "Search",
          "type": "button",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
